type Query {
  items: Items
}

type Items {
  typeA: Item
  typeB: Item
}

type Item {
  idField: String
  name: String
  computed(input: Params): Computed
}

type Computed {
  result: [ResultItem]
  calculationStatus: Status
}

type ResultItem {
  x: Int!
  y: Float!
}

type Status {
  status: STATUS
  message: String
}

enum STATUS {
  OK
  ERROR
  NOT_IMPLEMENTED
}

input Params {
  value: Int
}

type Echo {
  text: String
}

type Mutation {
  test(q: String): Echo
}
